name: Rust Connect CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check
    
    - name: Lint with clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: -- -D warnings
    
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
    
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
    
    - name: Build Docker image
      run: docker build -t rust-connect:${{ github.sha }} .
    
    - name: Integration tests
      run: |
        docker-compose -f docker-compose.yml -f docker-compose.test.yml up -d
        # Wait for services to be ready
        sleep 30
        # Run integration tests
        docker-compose -f docker-compose.yml -f docker-compose.test.yml run --rm rust-connect-test
        # Cleanup
        docker-compose -f docker-compose.yml -f docker-compose.test.yml down
